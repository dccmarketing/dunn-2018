/**
 * Centers a block element.
 */
@mixin center-block() {
	display 		: block;
	margin-left 	: auto;
	margin-right 	: auto;
}

/**
 * Centers and sets the max-width, with optional padding.
 * @param		string 		$padding 		Optional padding.
 */
@mixin centermax( $padding: 0 ) {
	margin 		: 0 auto;
	max-width 	: $size__max-width;
	padding 	: $padding;
}

/**
 * Hides non-breaking text and puts an ellipsis at the end to show there's additional text.
 */
@mixin ellipsis() {
	overflow 		: hidden;
	text-overflow 	: ellipsis;
	white-space 	: nowrap;
}

/**
 * Rem output with px fallback
 *
 * @param 		int 		$sizeValue 		Font size value in REMs. Default: 1.
 */
@mixin font-size( $sizeValue: 1 ) {
	font-size: ( $sizeValue * 16 ) + px;
	font-size: $sizeValue + rem;
} // font-size()

@mixin nobreak() {
	-webkit-column-break-inside : avoid;
	page-break-inside 			: avoid;
	break-inside 				: avoid;
}

@mixin resetbutton( $bgcolor: transparent, $bghover: inherit, $hovercolor: inherit ) {
	background 		: $bgcolor;
	border 			: none;
	border-radius 	: 0;
	box-shadow 		: none;
	font-size 		: 1em;
	padding 		: 0;
	text-shadow 	: none;

	&:hover,
	&:active,
	&:focus {
		background-color: $bghover;
		border-color 	: inherit;
		color 			: $hovercolor;
	}
}

@mixin resetfieldset() {
	background-color: transparent;
	border 			: none;
	margin 			: 0;
	padding 		: 0;
}

@mixin resetlist() {
	list-style 	: none;
	margin 		: 0;
	padding 	: 0;
}

/**
 * Style used for links. Removes the default underline except on hover
 * Sets the color of the link.
 *
 * @param 		string 		$color 		Required. Text color.
 * @param 		string 		$hover 		Optional. Text color to use on hover.
 */
@mixin unline( $color, $hover: null ) {
	color 			: $color;
	text-decoration : none;

	&:active,
	&:focus,
	&.focus,
	&:visited {
		color 			: $color;
		text-decoration : none;
	}

	&:hover {
		@if ($hover) {
			color: $hover;
		} @else {
			color: $color;
		}
		text-decoration : underline;
	}
}